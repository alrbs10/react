{"ast":null,"code":"var _jsxFileName = \"/Users/simhamin/Desktop/react/blog/src/App.js\",\n    _s = $RefreshSig$();\n\n/*eslint-disable */\n//노랑 워닝 안뜨게 하는 것\nimport React, { useState } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let [modal, modalChange] = useState(0);\n  {\n    /*스위치*/\n  }\n  let [글제목, 글제목변경] = useState([\"HTML이란?\", 'CSS란?', 'JS란?', 'REACT란?']); //state는 변경되어도 새로고침되지 않음. 재렌더링됨.\n\n  let [날짜, 날짜변경] = useState([\"9월 1일 발행\", \"9월 8일 발행\", \"9월 15일 발행\", \"9월 22일 발행\"]);\n  let [따봉, 따봉변경] = useState([0, 0, 0, 0]);\n  let [누른제목, 누른제목변경] = useState(0);\n  let [입력값, 입력값변경] = useState('');\n  let [newpost, newpostChange] = useState(false);\n\n  function 따봉바꾸기(a) {\n    var goodArray = [...따봉];\n    goodArray[a] += 1;\n    따봉변경(goodArray);\n  }\n\n  function 싹다변경(a) {\n    누른제목변경(a);\n    modalChange(modal + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"black-nav\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" \\uAC1C\\uBC1C Blog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 8\n    }, this), newpost % 2 === 1 ? /*#__PURE__*/_jsxDEV(Post, {\n      입력값: 입력값\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this) : console.log(newpost), [0, 1, 2, 3].map(function (a, i) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          onClick: () => {\n            싹다변경(a);\n          },\n          children: [글제목[a], /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => {\n              따봉바꾸기(a);\n            },\n            children: \"\\uD83D\\uDC4D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 49\n          }, this), \" \", 따봉[a]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: 날짜[a]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 14\n      }, this);\n    }), modal % 2 === 1 ? /*#__PURE__*/_jsxDEV(Modal, {\n      글제목: 글제목,\n      누른제목: 누른제목,\n      날짜: 날짜\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"publish\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => {\n          입력값변경(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          newpostChange(newpost + 1);\n        },\n        children: \"\\uC800\\uC7A5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"EedH47v0a3+FyFk+VN/uwK80wSs=\");\n\n_c = App;\n{\n  /* component: html 줄이는 방법 \n  유의사항: 1. 이름은 대괄호\n         2. return()안에 있는 건 태그 하나로 묶여있어야 함.(fragment: <> </>로 div 대체 가능)\n         3. functiona app도 하나의 컴포먼트, 새로 만드는 컴포먼트들은 app과 같은 위치에 놓기( 수평적인 관계 ).\n         4. 컴포먼트로 만들면 좋은 것: list처럼 반복되는 div class들. 자주 바뀌는 UI\n          5. 단, 너무 많이 만들면 state 쓸 때 복잡해짐. function 밖으로 나가게 되기 때문에 다시 가져다가 쓸 수 있음. ex. Modal에 글제목[0]이런 식으로 써줄 수 있음. props라는 문법을 이해해서 써야함.\n  */\n}\n\nfunction Modal(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.글제목[props.누른제목]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", props.날짜[props.누른제목], \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uC0C1\\uC138 \\uB0B4\\uC6A9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n} //props: 부모 컴퍼먼트의 state를 자식에게 전달하는 법. 부모 컴포넌트 안에 들어가이있는 태그에 name = {state} 이런식으로 작성\n//자식컴포넌트에서 props 파라미터 입력하면 거기에 정보 다 담기게 됨.\n//오브젝트 형식으로 props.state~ 이런식으로 씀\n\n\n_c2 = Modal;\n\nfunction Post(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.입력값\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"10\\uC6D4 1\\uC77C \\uBC1C\\uD589\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = Post;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Modal\");\n$RefreshReg$(_c3, \"Post\");","map":{"version":3,"sources":["/Users/simhamin/Desktop/react/blog/src/App.js"],"names":["React","useState","App","modal","modalChange","글제목","글제목변경","날짜","날짜변경","따봉","따봉변경","누른제목","누른제목변경","입력값","입력값변경","newpost","newpostChange","따봉바꾸기","a","goodArray","싹다변경","console","log","map","i","e","target","value","Modal","props","Post"],"mappings":"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","sourcesContent":["/*eslint-disable */\n//노랑 워닝 안뜨게 하는 것\n\nimport React, {useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  let [modal, modalChange] = useState(0);{/*스위치*/}\n  let [글제목, 글제목변경] = useState([\"HTML이란?\", 'CSS란?','JS란?','REACT란?']); //state는 변경되어도 새로고침되지 않음. 재렌더링됨.\n  let [날짜, 날짜변경] = useState([\"9월 1일 발행\",\"9월 8일 발행\",\"9월 15일 발행\",\"9월 22일 발행\"]);\n  let [따봉, 따봉변경] = useState([0,0,0,0]);\n  let [누른제목, 누른제목변경] = useState(0);\n  let [입력값, 입력값변경] = useState('');\n  let [newpost, newpostChange] = useState(false);\n\n  function 따봉바꾸기(a){\n    var goodArray = [...따봉];\n    goodArray[a]+=1;\n    따봉변경(goodArray);\n  }\n  function 싹다변경(a){\n    누른제목변경(a);\n    modalChange(modal+1);\n  }\n  return (\n    <div className=\"App\">\n       <div className=\"black-nav\">\n         <div> 개발 Blog</div>\n       </div>\n       {\n        newpost%2===1 \n        ? <Post 입력값={입력값}></Post> \n        : console.log(newpost)\n      }\n       {\n         [0,1,2,3].map(function(a, i){\n           return (\n             <div className=\"list\" key={i}>\n          <h3 onClick={()=>{싹다변경(a)}}>{ 글제목[a] }<span onClick={ ()=>{따봉바꾸기(a)} }>👍</span> {따봉[a]}</h3>\n          <p>{날짜[a]}</p>\n          <hr/>\n         </div>\n          )\n        })\n      }\n      \n      {/* <button onClick={()=>{modalChange(modal+1)}}>버튼</button> */}\n      \n      {\n        modal%2===1 \n        ? <Modal 글제목={글제목} 누른제목={누른제목} 날짜={날짜}></Modal> \n        : null\n      }\n      {/* 삼항연산자: {조건식 ? 참일 경우 실행되는 코드 : 거짓일 경우 실행되는 코드} */}\n      <div className=\"publish\">\n        <input onChange={ (e) => {입력값변경(e.target.value)}} />\n        <button onClick={()=>{newpostChange(newpost+1)}} >저장</button>\n      </div>\n    </div>\n  );\n}\n{/* component: html 줄이는 방법 \n유의사항: 1. 이름은 대괄호\n        2. return()안에 있는 건 태그 하나로 묶여있어야 함.(fragment: <> </>로 div 대체 가능)\n        3. functiona app도 하나의 컴포먼트, 새로 만드는 컴포먼트들은 app과 같은 위치에 놓기( 수평적인 관계 ).\n        4. 컴포먼트로 만들면 좋은 것: list처럼 반복되는 div class들. 자주 바뀌는 UI\n\n        5. 단, 너무 많이 만들면 state 쓸 때 복잡해짐. function 밖으로 나가게 되기 때문에 다시 가져다가 쓸 수 있음. ex. Modal에 글제목[0]이런 식으로 써줄 수 있음. props라는 문법을 이해해서 써야함.\n*/}\nfunction Modal(props){\n  return(\n    <div className=\"modal\">\n      <h2 >{props.글제목[props.누른제목]}</h2>\n      <p> {props.날짜[props.누른제목]} </p>\n      <p>상세 내용</p>\n    </div>\n  )\n}\n//props: 부모 컴퍼먼트의 state를 자식에게 전달하는 법. 부모 컴포넌트 안에 들어가이있는 태그에 name = {state} 이런식으로 작성\n//자식컴포넌트에서 props 파라미터 입력하면 거기에 정보 다 담기게 됨.\n//오브젝트 형식으로 props.state~ 이런식으로 씀\nfunction Post(props){\n  return(\n    <div className=\"list\">\n      <h3>{props.입력값}</h3>\n      <p>10월 1일 발행</p>\n      <hr/>\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}