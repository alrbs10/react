{"ast":null,"code":"import _toConsumableArray from\"/Users/simhamin/Desktop/react/blog/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/simhamin/Desktop/react/blog/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/*eslint-disable */ //노랑 워닝 안뜨게 하는 것\nimport React,{useState}from'react';import logo from\"./logo.svg\";import'./App.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),modal=_useState2[0],modalChange=_useState2[1];{/*스위치*/}var _useState3=useState([\"HTML이란?\",'CSS란?','JS란?','REACT란?']),_useState4=_slicedToArray(_useState3,2),글제목=_useState4[0],글제목변경=_useState4[1];//state는 변경되어도 새로고침되지 않음. 재렌더링됨.\nvar _useState5=useState([\"9월 1일 발행\",\"9월 8일 발행\",\"9월 15일 발행\",\"9월 22일 발행\"]),_useState6=_slicedToArray(_useState5,2),날짜=_useState6[0],날짜변경=_useState6[1];var _useState7=useState([0,0,0,0]),_useState8=_slicedToArray(_useState7,2),따봉=_useState8[0],따봉변경=_useState8[1];var _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),누른제목=_useState10[0],누른제목변경=_useState10[1];var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),입력값=_useState12[0],입력값변경=_useState12[1];function 따봉바꾸기(a){var goodArray=_toConsumableArray(따봉);goodArray[a]+=1;따봉변경(goodArray);}function 싹다변경(a){누른제목변경(a);modalChange(modal+1);}return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"black-nav\",children:/*#__PURE__*/_jsx(\"div\",{children:\" \\uAC1C\\uBC1C Blog\"})}),글제목.map(function(글,i){return/*#__PURE__*/_jsxs(\"div\",{className:\"list\",children:[/*#__PURE__*/_jsxs(\"h3\",{onClick:function onClick(){싹다변경(i);},children:[글,/*#__PURE__*/_jsx(\"span\",{onClick:function onClick(){따봉바꾸기(i);},children:\"\\uD83D\\uDC4D\"}),\" \",따봉[i]]}),/*#__PURE__*/_jsx(\"p\",{children:날짜[i]}),/*#__PURE__*/_jsx(\"hr\",{})]},i);}),modal%2===1?/*#__PURE__*/_jsx(Modal,{글제목:글제목,누른제목:누른제목,날짜:날짜}):null,/*#__PURE__*/_jsxs(\"div\",{className:\"publish\",children:[/*#__PURE__*/_jsx(\"input\",{onChange:function onChange(e){입력값변경(e.target.value);}}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){var 새로운글제목=_toConsumableArray(글제목);새로운글제목.unshift(입력값);글제목변경(새로운글제목);},children:\"\\uC800\\uC7A5\"})]})]});}{/* component: html 줄이는 방법 \n유의사항: 1. 이름은 대괄호\n        2. return()안에 있는 건 태그 하나로 묶여있어야 함.(fragment: <> </>로 div 대체 가능)\n        3. functiona app도 하나의 컴포먼트, 새로 만드는 컴포먼트들은 app과 같은 위치에 놓기( 수평적인 관계 ).\n        4. 컴포먼트로 만들면 좋은 것: list처럼 반복되는 div class들. 자주 바뀌는 UI\n\n        5. 단, 너무 많이 만들면 state 쓸 때 복잡해짐. function 밖으로 나가게 되기 때문에 다시 가져다가 쓸 수 있음. ex. Modal에 글제목[0]이런 식으로 써줄 수 있음. props라는 문법을 이해해서 써야함.\n*/}function Modal(props){return/*#__PURE__*/_jsxs(\"div\",{className:\"modal\",children:[/*#__PURE__*/_jsx(\"h2\",{children:props.글제목[props.누른제목]}),/*#__PURE__*/_jsxs(\"p\",{children:[\" \",props.날짜[props.누른제목],\" \"]}),/*#__PURE__*/_jsx(\"p\",{children:\"\\uC0C1\\uC138 \\uB0B4\\uC6A9\"})]});}//props: 부모 컴퍼먼트의 state를 자식에게 전달하는 법. 부모 컴포넌트 안에 들어가이있는 태그에 name = {state} 이런식으로 작성\n//자식컴포넌트에서 props 파라미터 입력하면 거기에 정보 다 담기게 됨.\n//오브젝트 형식으로 props.state~ 이런식으로 씀\nexport default App;","map":{"version":3,"sources":["/Users/simhamin/Desktop/react/blog/src/App.js"],"names":["React","useState","App","modal","modalChange","글제목","글제목변경","날짜","날짜변경","따봉","따봉변경","누른제목","누른제목변경","입력값","입력값변경","따봉바꾸기","a","goodArray","싹다변경","map","글","i","e","target","value","새로운글제목","unshift","Modal","props"],"mappings":"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","sourcesContent":["/*eslint-disable */\n//노랑 워닝 안뜨게 하는 것\n\nimport React, {useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  let [modal, modalChange] = useState(0);{/*스위치*/}\n  let [글제목, 글제목변경] = useState([\"HTML이란?\", 'CSS란?','JS란?','REACT란?']); //state는 변경되어도 새로고침되지 않음. 재렌더링됨.\n  let [날짜, 날짜변경] = useState([\"9월 1일 발행\",\"9월 8일 발행\",\"9월 15일 발행\",\"9월 22일 발행\"]);\n  let [따봉, 따봉변경] = useState([0,0,0,0]);\n  let [누른제목, 누른제목변경] = useState(0);\n  let [입력값, 입력값변경] = useState('');\n\n  function 따봉바꾸기(a){\n    var goodArray = [...따봉];\n    goodArray[a]+=1;\n    따봉변경(goodArray);\n  }\n  function 싹다변경(a){\n    누른제목변경(a);\n    modalChange(modal+1);\n  }\n  return (\n    <div className=\"App\">\n       <div className=\"black-nav\">\n         <div> 개발 Blog</div>\n       </div>\n       {\n         글제목.map(function(글, i){\n           return (\n             <div className=\"list\" key={i}>\n          <h3 onClick={()=>{싹다변경(i)}}>{ 글 }<span onClick={ ()=>{따봉바꾸기(i)} }>👍</span> {따봉[i]}</h3>\n          <p>{날짜[i]}</p>\n          <hr/>\n         </div>\n          )\n        })\n      }\n      \n      {/* <button onClick={()=>{modalChange(modal+1)}}>버튼</button> */}\n      \n      {\n        modal%2===1 \n        ? <Modal 글제목={글제목} 누른제목={누른제목} 날짜={날짜}></Modal> \n        : null\n      }\n      {/* 삼항연산자: {조건식 ? 참일 경우 실행되는 코드 : 거짓일 경우 실행되는 코드} */}\n      <div className=\"publish\">\n        <input onChange={ (e) => {입력값변경(e.target.value)}} />\n        <button onClick={()=>{\n          let 새로운글제목 = [...글제목];\n          새로운글제목.unshift(입력값);\n          글제목변경(새로운글제목)\n        }} >저장</button>\n      </div>\n    </div>\n  );\n}\n{/* component: html 줄이는 방법 \n유의사항: 1. 이름은 대괄호\n        2. return()안에 있는 건 태그 하나로 묶여있어야 함.(fragment: <> </>로 div 대체 가능)\n        3. functiona app도 하나의 컴포먼트, 새로 만드는 컴포먼트들은 app과 같은 위치에 놓기( 수평적인 관계 ).\n        4. 컴포먼트로 만들면 좋은 것: list처럼 반복되는 div class들. 자주 바뀌는 UI\n\n        5. 단, 너무 많이 만들면 state 쓸 때 복잡해짐. function 밖으로 나가게 되기 때문에 다시 가져다가 쓸 수 있음. ex. Modal에 글제목[0]이런 식으로 써줄 수 있음. props라는 문법을 이해해서 써야함.\n*/}\nfunction Modal(props){\n  return(\n    <div className=\"modal\">\n      <h2 >{props.글제목[props.누른제목]}</h2>\n      <p> {props.날짜[props.누른제목]} </p>\n      <p>상세 내용</p>\n    </div>\n  )\n}\n//props: 부모 컴퍼먼트의 state를 자식에게 전달하는 법. 부모 컴포넌트 안에 들어가이있는 태그에 name = {state} 이런식으로 작성\n//자식컴포넌트에서 props 파라미터 입력하면 거기에 정보 다 담기게 됨.\n//오브젝트 형식으로 props.state~ 이런식으로 씀\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}