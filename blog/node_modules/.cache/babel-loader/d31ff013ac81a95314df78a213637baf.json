{"ast":null,"code":"import _toConsumableArray from\"/Users/simhamin/Desktop/react/blog/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/simhamin/Desktop/react/blog/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/*eslint-disable */ //노랑 워닝 안뜨게 하는 것\nimport React,{useState}from'react';import logo from\"./logo.svg\";import'./App.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),modal=_useState2[0],modalChange=_useState2[1];{/*스위치*/}var _useState3=useState([\"HTML이란?\",'CSS란?','JS란?','REACT란?']),_useState4=_slicedToArray(_useState3,2),글제목=_useState4[0],글제목변경=_useState4[1];//state는 변경되어도 새로고침되지 않음. 재렌더링됨.\nvar _useState5=useState(0,0,0,0),_useState6=_slicedToArray(_useState5,2),따봉=_useState6[0],따봉변경=_useState6[1];function 제목변경(){var newArray=_toConsumableArray(글제목);newArray[0]=\"Python이란?\";글제목변경(newArray);}return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"black-nav\",children:/*#__PURE__*/_jsx(\"div\",{children:\" \\uAC1C\\uBC1C Blog\"})}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){modalChange(modal+1);},children:\"\\uBC84\\uD2BC\"}),modal%2===1?/*#__PURE__*/_jsx(Modal,{}):null,[0,1,2,3].map(function(a){return/*#__PURE__*/_jsxs(\"div\",{className:\"list\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[글제목[a],/*#__PURE__*/_jsx(\"span\",{onClick:function onClick(a){var goodArray=_toConsumableArray(따봉);goodArray[a]+=1;따봉변경(goodArray);},children:\"\\uD83D\\uDC4D\"}),\" \",따봉[a]]}),/*#__PURE__*/_jsx(\"p\",{children:\"9\\uC6D4 22\\uC77C \\uBC1C\\uD589\"}),/*#__PURE__*/_jsx(\"hr\",{})]});})]});}{/* component: html 줄이는 방법 \n유의사항: 1. 이름은 대괄호\n        2. return()안에 있는 건 태그 하나로 묶여있어야 함.(fragment: <> </>로 div 대체 가능)\n        3. functiona app도 하나의 컴포먼트, 새로 만드는 컴포먼트들은 app과 같은 위치에 놓기( 수평적인 관계 ).\n        4. 컴포먼트로 만들면 좋은 것: list처럼 반복되는 div class들. 자주 바뀌는 UI\n\n        5. 단, 너무 많이 만들면 state 쓸 때 복잡해짐. function 밖으로 나가게 되기 때문에 다시 가져다가 쓸 수 있음. ex. Modal에 글제목[0]이런 식으로 써줄 수 있음. props라는 문법을 이해해서 써야함.\n*/}function Modal(){return/*#__PURE__*/_jsxs(\"div\",{className:\"modal\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uC81C\\uBAA9\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\uB0A0\\uC9DC\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\uC0C1\\uC138 \\uB0B4\\uC6A9\"})]});}export default App;","map":{"version":3,"sources":["/Users/simhamin/Desktop/react/blog/src/App.js"],"names":["React","useState","App","modal","modalChange","글제목","글제목변경","따봉","따봉변경","제목변경","newArray","map","a","goodArray","Modal"],"mappings":"kPAAA,mB,CACA;AAEA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,C,6BAEA,MAAO,WAAP,C,wFAEA,QAASC,CAAAA,GAAT,EAAe,CACf,cAA2BD,QAAQ,CAAC,CAAD,CAAnC,wCAAKE,KAAL,eAAYC,WAAZ,eAAuC,CAAC,OAAQ,CAC9C,eAAmBH,QAAQ,CAAC,CAAC,SAAD,CAAY,OAAZ,CAAoB,MAApB,CAA2B,SAA3B,CAAD,CAA3B,yCAAKI,GAAL,eAAUC,KAAV,eAAoE;AACpE,eAAiBL,QAAQ,CAAC,CAAD,CAAG,CAAH,CAAK,CAAL,CAAO,CAAP,CAAzB,yCAAKM,EAAL,eAASC,IAAT,eAGA,QAASC,CAAAA,IAAT,EAAe,CACb,GAAIC,CAAAA,QAAQ,oBAAOL,GAAP,CAAZ,CACAK,QAAQ,CAAC,CAAD,CAAR,CAAc,WAAd,CACAJ,KAAK,CAACI,QAAD,CAAL,CACD,CACD,mBACE,aAAK,SAAS,CAAC,KAAf,wBACG,YAAK,SAAS,CAAC,WAAf,uBACE,2CADF,EADH,cAKG,eAAQ,OAAO,CAAE,kBAAI,CAACN,WAAW,CAACD,KAAK,CAAC,CAAP,CAAX,CAAqB,CAA3C,0BALH,CAOKA,KAAK,CAAC,CAAN,GAAU,CAAV,cAAc,KAAC,KAAD,IAAd,CAAgC,IAPrC,CAYI,CAAC,CAAD,CAAG,CAAH,CAAK,CAAL,CAAO,CAAP,EAAUQ,GAAV,CAAc,SAASC,CAAT,CAAW,CACvB,mBACA,aAAK,SAAS,CAAC,MAAf,wBACA,sBAAMP,GAAG,CAACO,CAAD,CAAT,cAAc,aAAM,OAAO,CAAG,iBAASA,CAAT,CAAW,CACvC,GAAIC,CAAAA,SAAS,oBAAON,EAAP,CAAb,CACAM,SAAS,CAACD,CAAD,CAAT,EAAgB,CAAhB,CACAJ,IAAI,CAACK,SAAD,CAAJ,CACD,CAJa,0BAAd,KAIcN,EAAE,CAACK,CAAD,CAJhB,GADA,cAMA,oDANA,cAOA,aAPA,GADA,CAWD,CAZD,CAZJ,GADF,CA6BD,CACD,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,EAAG,CACH,QAASE,CAAAA,KAAT,EAAgB,CACd,mBACE,aAAK,SAAS,CAAC,OAAf,wBACE,oCADF,cAEE,mCAFF,cAGE,gDAHF,GADF,CAOD,CAED,cAAeZ,CAAAA,GAAf","sourcesContent":["/*eslint-disable */\n//노랑 워닝 안뜨게 하는 것\n\nimport React, {useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\nlet [modal, modalChange] = useState(0);{/*스위치*/}\n  let [글제목, 글제목변경] = useState([\"HTML이란?\", 'CSS란?','JS란?','REACT란?']); //state는 변경되어도 새로고침되지 않음. 재렌더링됨.\n  let [따봉, 따봉변경] = useState(0,0,0,0);\n\n\n  function 제목변경(){\n    var newArray = [...글제목];\n    newArray[0] = \"Python이란?\";\n    글제목변경(newArray);\n  }\n  return (\n    <div className=\"App\">\n       <div className=\"black-nav\">\n         <div> 개발 Blog</div>\n       </div>\n       \n       <button onClick={()=>{modalChange(modal+1)}}>버튼</button>\n       {\n         modal%2===1 ? <Modal></Modal> : null\n       }\n       {/* 삼항연산자: {조건식 ? 참일 경우 실행되는 코드 : 거짓일 경우 실행되는 코드} */}\n\n       {\n        [0,1,2,3].map(function(a){\n          return (\n          <div className=\"list\">\n          <h3>{ 글제목[a] }<span onClick={ function(a){\n            var goodArray = [...따봉];\n            goodArray[a] += 1;\n            따봉변경(goodArray);\n          }}>👍</span> {따봉[a]}</h3>\n          <p>9월 22일 발행</p>\n          <hr/>\n         </div>\n          )\n        })\n       }\n    </div>\n  );\n}\n{/* component: html 줄이는 방법 \n유의사항: 1. 이름은 대괄호\n        2. return()안에 있는 건 태그 하나로 묶여있어야 함.(fragment: <> </>로 div 대체 가능)\n        3. functiona app도 하나의 컴포먼트, 새로 만드는 컴포먼트들은 app과 같은 위치에 놓기( 수평적인 관계 ).\n        4. 컴포먼트로 만들면 좋은 것: list처럼 반복되는 div class들. 자주 바뀌는 UI\n\n        5. 단, 너무 많이 만들면 state 쓸 때 복잡해짐. function 밖으로 나가게 되기 때문에 다시 가져다가 쓸 수 있음. ex. Modal에 글제목[0]이런 식으로 써줄 수 있음. props라는 문법을 이해해서 써야함.\n*/}\nfunction Modal(){\n  return(\n    <div className=\"modal\">\n      <h2>제목</h2>\n      <p>날짜</p>\n      <p>상세 내용</p>\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}