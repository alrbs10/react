{"ast":null,"code":"var _jsxFileName = \"/Users/simhamin/Desktop/react/blog/src/App.js\",\n    _s = $RefreshSig$();\n\n/*eslint-disable */\n//노랑 워닝 안뜨게 하는 것\nimport React, { useState } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let [modal, modalChange] = useState(0);\n  {\n    /*스위치*/\n  }\n  let [글제목, 글제목변경] = useState([\"HTML이란?\", 'CSS란?', 'JS란?', 'REACT란?']); //state는 변경되어도 새로고침되지 않음. 재렌더링됨.\n\n  let [따봉, 따봉변경] = useState(0, 0, 0, 0);\n\n  function 제목변경() {\n    var newArray = [...글제목];\n    newArray[0] = \"Python이란?\";\n    글제목변경(newArray);\n  }\n\n  function 따봉바꾸기(a) {\n    var goodArray = [...따봉];\n    goodArray[a] += 1;\n    따봉변경(goodArray);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"black-nav\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" \\uAC1C\\uBC1C Blog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        modalChange(modal + 1);\n      },\n      children: \"\\uBC84\\uD2BC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 8\n    }, this), modal % 2 === 1 ? /*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 24\n    }, this) : null, [0, 1, 2, 3].map(function (a) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [글제목[a], /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: 따봉a,\n            children: \"\\uD83D\\uDC4D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), \" \", 따봉[a]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"9\\uC6D4 22\\uC77C \\uBC1C\\uD589\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"LQXhyfNiorNNnPT5+kwS+LZoHtc=\");\n\n_c = App;\n{\n  /* component: html 줄이는 방법 \n  유의사항: 1. 이름은 대괄호\n         2. return()안에 있는 건 태그 하나로 묶여있어야 함.(fragment: <> </>로 div 대체 가능)\n         3. functiona app도 하나의 컴포먼트, 새로 만드는 컴포먼트들은 app과 같은 위치에 놓기( 수평적인 관계 ).\n         4. 컴포먼트로 만들면 좋은 것: list처럼 반복되는 div class들. 자주 바뀌는 UI\n          5. 단, 너무 많이 만들면 state 쓸 때 복잡해짐. function 밖으로 나가게 되기 때문에 다시 가져다가 쓸 수 있음. ex. Modal에 글제목[0]이런 식으로 써줄 수 있음. props라는 문법을 이해해서 써야함.\n  */\n}\n\nfunction Modal() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC81C\\uBAA9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uB0A0\\uC9DC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uC0C1\\uC138 \\uB0B4\\uC6A9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = Modal;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Modal\");","map":{"version":3,"sources":["/Users/simhamin/Desktop/react/blog/src/App.js"],"names":["React","useState","App","modal","modalChange","글제목","글제목변경","따봉","따봉변경","제목변경","newArray","따봉바꾸기","a","goodArray","map","따봉a","Modal"],"mappings":";;;AAAA;AACA;AAEA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACf,MAAI,CAACC,KAAD,EAAQC,WAAR,IAAuBH,QAAQ,CAAC,CAAD,CAAnC;AAAuC;AAAC;AAAQ;AAC9C,MAAI,CAACI,GAAD,EAAMC,KAAN,IAAeL,QAAQ,CAAC,CAAC,SAAD,EAAY,OAAZ,EAAoB,MAApB,EAA2B,SAA3B,CAAD,CAA3B,CAFa,CAEuD;;AACpE,MAAI,CAACM,EAAD,EAAKC,IAAL,IAAaP,QAAQ,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,CAAzB;;AAGA,WAASQ,IAAT,GAAe;AACb,QAAIC,QAAQ,GAAG,CAAC,GAAGL,GAAJ,CAAf;AACAK,IAAAA,QAAQ,CAAC,CAAD,CAAR,GAAc,WAAd;AACAJ,IAAAA,KAAK,CAACI,QAAD,CAAL;AACD;;AACD,WAASC,KAAT,CAAeC,CAAf,EAAiB;AACf,QAAIC,SAAS,GAAG,CAAC,GAAGN,EAAJ,CAAhB;AACAM,IAAAA,SAAS,CAACD,CAAD,CAAT,IAAc,CAAd;AACAJ,IAAAA,IAAI,CAACK,SAAD,CAAJ;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACG;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADH,eAKG;AAAQ,MAAA,OAAO,EAAE,MAAI;AAACT,QAAAA,WAAW,CAACD,KAAK,GAAC,CAAP,CAAX;AAAqB,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALH,EAOKA,KAAK,GAAC,CAAN,KAAU,CAAV,gBAAc,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAAd,GAAgC,IAPrC,EAYI,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAUW,GAAV,CAAc,UAASF,CAAT,EAAW;AACvB,0BACA;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACA;AAAA,qBAAMP,GAAG,CAACO,CAAD,CAAT,eAAc;AAAM,YAAA,OAAO,EAAGG,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAd,OAA+CR,EAAE,CAACK,CAAD,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGA;AAAA;AAAA;AAAA;AAAA,gBAHA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA;AAOD,KARD,CAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GAzCQV,G;;KAAAA,G;AA0CT;AAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACG;;AACH,SAASc,KAAT,GAAgB;AACd,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;MARQA,K;AAUT,eAAed,GAAf","sourcesContent":["/*eslint-disable */\n//노랑 워닝 안뜨게 하는 것\n\nimport React, {useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\nlet [modal, modalChange] = useState(0);{/*스위치*/}\n  let [글제목, 글제목변경] = useState([\"HTML이란?\", 'CSS란?','JS란?','REACT란?']); //state는 변경되어도 새로고침되지 않음. 재렌더링됨.\n  let [따봉, 따봉변경] = useState(0,0,0,0);\n\n\n  function 제목변경(){\n    var newArray = [...글제목];\n    newArray[0] = \"Python이란?\";\n    글제목변경(newArray);\n  }\n  function 따봉바꾸기(a){\n    var goodArray = [...따봉];\n    goodArray[a]+=1;\n    따봉변경(goodArray);\n  }\n  return (\n    <div className=\"App\">\n       <div className=\"black-nav\">\n         <div> 개발 Blog</div>\n       </div>\n       \n       <button onClick={()=>{modalChange(modal+1)}}>버튼</button>\n       {\n         modal%2===1 ? <Modal></Modal> : null\n       }\n       {/* 삼항연산자: {조건식 ? 참일 경우 실행되는 코드 : 거짓일 경우 실행되는 코드} */}\n\n       {\n        [0,1,2,3].map(function(a){\n          return (\n          <div className=\"list\">\n          <h3>{ 글제목[a] }<span onClick={ 따봉a }>👍</span> {따봉[a]}</h3>\n          <p>9월 22일 발행</p>\n          <hr/>\n         </div>\n          )\n        })\n       }\n    </div>\n  );\n}\n{/* component: html 줄이는 방법 \n유의사항: 1. 이름은 대괄호\n        2. return()안에 있는 건 태그 하나로 묶여있어야 함.(fragment: <> </>로 div 대체 가능)\n        3. functiona app도 하나의 컴포먼트, 새로 만드는 컴포먼트들은 app과 같은 위치에 놓기( 수평적인 관계 ).\n        4. 컴포먼트로 만들면 좋은 것: list처럼 반복되는 div class들. 자주 바뀌는 UI\n\n        5. 단, 너무 많이 만들면 state 쓸 때 복잡해짐. function 밖으로 나가게 되기 때문에 다시 가져다가 쓸 수 있음. ex. Modal에 글제목[0]이런 식으로 써줄 수 있음. props라는 문법을 이해해서 써야함.\n*/}\nfunction Modal(){\n  return(\n    <div className=\"modal\">\n      <h2>제목</h2>\n      <p>날짜</p>\n      <p>상세 내용</p>\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}